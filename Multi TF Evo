//Multi-TF evolution - long term

//@version=6
strategy("Multi-TF Momentum Strategy v4.1", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=50)

// === ‚è±Ô∏è Timeframes ===
tf_m1  = "1"
tf_m5  = "5"
tf_m15 = "15"
main_tf = "5"
ha_tf = "1"
htf_tf = "30"

// === ‚öôÔ∏è Inputs ===
adxThresh_m1  = input.float(12.7, "ADX Threshold M1")
adxThresh_m5  = input.float(14.3, "ADX Threshold M5")
adxThresh_m15 = input.float(17.1, "ADX Threshold M15")
atrMult = input.float(2.575, "ATR Multiplier")
slMultiplier = input.float(2.15, "SL Multiplier")
htf_supertrendFactor = input.float(3.0, "HTF Supertrend Factor")
htf_supertrendATRlen = input.int(10, "HTF Supertrend ATR Length")
useVolatilityFilter = input.bool(true, "Use Volatility Filter?")
debugMode = input.bool(true, "Enable Debug Mode")

// === üîÅ ADX Funktion
getADX(tf, len) =>
    upMove   = request.security(syminfo.tickerid, tf, ta.change(high))
    downMove = request.security(syminfo.tickerid, tf, -ta.change(low))
    plusDM  = na(upMove) or upMove < 0 or upMove <= downMove ? 0 : upMove
    minusDM = na(downMove) or downMove < 0 or downMove < upMove ? 0 : downMove
    tr = request.security(syminfo.tickerid, tf, ta.tr)
    smoothedTR  = ta.rma(tr, len)
    smoothedPlusDM  = ta.rma(plusDM, len)
    smoothedMinusDM = ta.rma(minusDM, len)
    plusDI  = 100 * smoothedPlusDM  / smoothedTR
    minusDI = 100 * smoothedMinusDM / smoothedTR
    dx = 100 * math.abs(plusDI - minusDI) / (plusDI + minusDI)
    adx = ta.rma(dx, len)
    adx

// === HTF Trend
htf_ema50 = request.security(syminfo.tickerid, htf_tf, ta.ema(close, 50))
htf_ema200 = request.security(syminfo.tickerid, htf_tf, ta.ema(close, 200))
htf_adx = getADX(htf_tf, 14)
[htf_supertrend, _] = request.security(syminfo.tickerid, htf_tf, ta.supertrend(htf_supertrendFactor, htf_supertrendATRlen))
htfTrendUp = htf_ema50 > htf_ema200 and htf_adx > 20 and close > htf_supertrend
htfTrendDown = htf_ema50 < htf_ema200 and htf_adx > 20 and close < htf_supertrend
validHTFLong = htfTrendUp
validHTFShort = htfTrendDown

// === MTF Trendlogik
getTrend(tf, adxThresh) =>
    ema50 = request.security(syminfo.tickerid, tf, ta.ema(close, 50))
    ema200 = request.security(syminfo.tickerid, tf, ta.ema(close, 200))
    [macdLine, signalLine, _] = request.security(syminfo.tickerid, tf, ta.macd(close, 12, 26, 9))
    macdHist = macdLine - signalLine
    adxVal = getADX(tf, 14)
    trendUp = ema50 > ema200 and macdHist > 0 and adxVal > adxThresh
    trendDown = ema50 < ema200 and macdHist < 0 and adxVal > adxThresh
    [trendUp, trendDown, adxVal]

[trendUp_m1, trendDown_m1, adx_m1]   = getTrend(tf_m1, adxThresh_m1)
[trendUp_m5, trendDown_m5, adx_m5]   = getTrend(tf_m5, adxThresh_m5)
[trendUp_m15, trendDown_m15, adx_m15] = getTrend(tf_m15, adxThresh_m15)

adxRaw = adx_m5
adxNorm = math.min(math.max((adxRaw - 12) / (48 - 14), 0), 1)

// === RSI + Breakout Filter
rsi = ta.rsi(close, 14)
rsiLongFilter = rsi > 55
rsiShortFilter = rsi < 45
breakoutLong = close > ta.highest(high[1], 3)
breakoutShort = close < ta.lowest(low[1], 3)

// === Score
longScore = (trendUp_m1 ? 1 : 0) + (trendUp_m5 ? 1.5 : 0) + (trendUp_m15 ? 2 : 0)
shortScore = (trendDown_m1 ? 1 : 0) + (trendDown_m5 ? 1.5 : 0) + (trendDown_m15 ? 2 : 0)
validComboLong  = (trendUp_m5 and trendUp_m15)
validComboShort = (trendDown_m5 and trendDown_m15)
blockLong  = trendUp_m1 and trendUp_m15 and not trendUp_m5
blockShort = trendDown_m1 and trendDown_m15 and not trendDown_m5

longSignal  = longScore >= 3.5 and validComboLong and not blockLong and adxNorm > 0.27 and ta.rising(adx_m5, 2) and validHTFLong and rsiLongFilter and breakoutLong
shortSignal = shortScore >= 3.5 and validComboShort and not blockShort and adxNorm > 0.27 and ta.rising(adx_m5, 2) and validHTFShort and rsiShortFilter and breakoutShort

// === Donchian Range f√ºr TP-Anpassung
donchianUpper = request.security(syminfo.tickerid, main_tf, ta.highest(high, 20))
donchianLower = request.security(syminfo.tickerid, main_tf, ta.lowest(low, 20))
donchianRange = donchianUpper - donchianLower
atrVal = ta.atr(14)
donchianNarrow = donchianRange < atrVal * 1.2

// === Struktur-SL Funktionen
getSwingLow(len) =>
    lowestLow = ta.lowest(len)
    swingLow = low == lowestLow ? low : na
    ta.valuewhen(not na(swingLow), swingLow, 0)

getSwingHigh(len) =>
    highestHigh = ta.highest(len)
    swingHigh = high == highestHigh ? high : na
    ta.valuewhen(not na(swingHigh), swingHigh, 0)

structureSwingLow  = getSwingLow(10)
structureSwingHigh = getSwingHigh(10)

// === Entry Trigger
longSignalNow  = longSignal and not longSignal[1]
shortSignalNow = shortSignal and not shortSignal[1]
isLong  = strategy.position_size > 0
isShort = strategy.position_size < 0

if (longSignalNow and not isLong and not isShort)
    strategy.entry("Long", strategy.long)

if (shortSignalNow and not isLong and not isShort)
    strategy.entry("Short", strategy.short)

// === Entry-Preise merken
longEntryPrice  = isLong  ? strategy.position_avg_price : na
shortEntryPrice = isShort ? strategy.position_avg_price : na

// === TP/SL Setup
dynamicTPMult = donchianNarrow ? 2.5 : adxNorm > 0.8 ? 6.0 : adxNorm > 0.6 ? 4.5 : 3.0

// === LONG TP/SL
atrStopLong = longEntryPrice - atrVal * atrMult
structureStopLong = structureSwingLow
finalStopLong = math.max(atrStopLong, structureStopLong)
tpLong = longEntryPrice + atrVal * atrMult * dynamicTPMult

// === SHORT TP/SL
atrStopShort = shortEntryPrice + atrVal * atrMult
structureStopShort = structureSwingHigh
finalStopShort = math.min(atrStopShort, structureStopShort)
tpShort = shortEntryPrice - atrVal * atrMult * dynamicTPMult

// === Adaptive Timeout
barsToTimeout = adxNorm > 0.8 ? 120 : adxNorm > 0.6 ? 80 : 50
timeInTradeLong  = bar_index - nz(isLong  ? strategy.opentrades.entry_bar_index(0) : na)
timeInTradeShort = bar_index - nz(isShort ? strategy.opentrades.entry_bar_index(0) : na)

// === Ichimoku + TP Score
tenkan = request.security(syminfo.tickerid, main_tf, ta.sma(ta.highest(high, 9) + ta.lowest(low, 9), 2))
kijun  = request.security(syminfo.tickerid, main_tf, ta.sma(ta.highest(high, 26) + ta.lowest(low, 26), 2))
priceBelowKijun = close < kijun
adxTP = request.security(syminfo.tickerid, main_tf, getADX(main_tf, 14))

tpScore = 0
tpScore += close < open ? 1 : 0
tpScore += ta.change(donchianRange) < 0 ? 1 : 0
tpScore += priceBelowKijun ? 2 : 0
tpScore += ta.rising(adxTP, 2) ? 1 : 0

// === Exits ‚Äì Long
exitBE_Long   = close > tpLong
exitTime_Long = timeInTradeLong >= barsToTimeout and close < longEntryPrice + atrVal * 0.375
exitScoreLong = tpScore >= 3 and ta.falling(tpScore, 1)

if isLong
    strategy.exit("TP/SL Long", from_entry="Long", limit=tpLong, stop=finalStopLong)
    if exitBE_Long
        strategy.exit("BE Long", from_entry="Long", stop=longEntryPrice)
    else if exitTime_Long
        strategy.close("Long", comment="‚è≥ Timeout Long")
    else if exitScoreLong
        strategy.close("Long", comment="üìâ TP Score Exit Long")

// === Exits ‚Äì Short
exitBE_Short   = close < tpShort
exitTime_Short = timeInTradeShort >= barsToTimeout and close > shortEntryPrice - atrVal * 0.375
exitScoreShort = tpScore >= 3 and ta.falling(tpScore, 1)

if isShort
    strategy.exit("TP/SL Short", from_entry="Short", limit=tpShort, stop=finalStopShort)
    if exitBE_Short
        strategy.exit("BE Short", from_entry="Short", stop=shortEntryPrice)
    else if exitTime_Short
        strategy.close("Short", comment="‚è≥ Timeout Short")
    else if exitScoreShort
        strategy.close("Short", comment="üìâ TP Score Exit Short")

// === ‚ùå Trendbruch-Exit
ema50_m5 = request.security(syminfo.tickerid, tf_m5, ta.ema(close, 50))
ema200_m5 = request.security(syminfo.tickerid, tf_m5, ta.ema(close, 200))
[macdLine_m5, signalLine_m5, _] = request.security(syminfo.tickerid, tf_m5, ta.macd(close, 12, 26, 9))
macdHist_m5 = macdLine_m5 - signalLine_m5
exitLongCondition  = ema50_m5 < ema200_m5 or macdHist_m5 < 0
exitShortCondition = ema50_m5 > ema200_m5 or macdHist_m5 > 0

if isLong and exitLongCondition
    strategy.close("Long", comment="‚ùå Trendbruch Long")

if isShort and exitShortCondition
    strategy.close("Short", comment="‚ùå Trendbruch Short")

// === üå™Ô∏è Volatility / Volume Filter
atrFilter = ta.rising(ta.atr(14), 5)
volFilter = ta.sma(volume, 20) > ta.sma(volume, 50)
allowTrade = useVolatilityFilter ? (atrFilter and volFilter) : true

// === üìâ Heikin Ashi Unterst√ºtzung
getHeikinAshi(tf) =>
    o = request.security(syminfo.tickerid, tf, open)
    h = request.security(syminfo.tickerid, tf, high)
    l = request.security(syminfo.tickerid, tf, low)
    c = request.security(syminfo.tickerid, tf, close)
    haClose = (o + h + l + c) / 4
    var float haOpen = na
    haOpen := na(haOpen) ? (o + c) / 2 : (haOpen[1] + haClose[1]) / 2
    [haOpen, haClose]

[haOpen, haClose] = getHeikinAshi(ha_tf)
haBearish = haClose < haOpen

// === üêû DEBUG MODUS
plotchar(debugMode and trendUp_m1     ? 1 : na, title="M1 Up", location=location.bottom, color=color.green, offset=-1)
plotchar(debugMode and trendUp_m5     ? 1 : na, title="M5 Up", location=location.bottom, color=color.green, offset=-2)
plotchar(debugMode and trendUp_m15    ? 1 : na, title="M15 Up", location=location.bottom, color=color.green, offset=-3)

plotchar(debugMode and trendDown_m1   ? 1 : na, title="M1 Down", location=location.bottom, color=color.red, offset=-1)
plotchar(debugMode and trendDown_m5   ? 1 : na, title="M5 Down", location=location.bottom, color=color.red, offset=-2)
plotchar(debugMode and trendDown_m15  ? 1 : na, title="M15 Down", location=location.bottom, color=color.red, offset=-3)

plotchar(debugMode and validComboLong ? 1 : na, title="‚úîÔ∏è Valid Combo Long", location=location.top, color=color.fuchsia, offset=-1)
plotchar(debugMode and blockLong      ? 1 : na, title="‚ùå Blocked Long Combo", location=location.top, color=color.orange, offset=-1)

plotchar(debugMode and validComboShort ? 1 : na, title="‚úîÔ∏è Valid Combo Short", location=location.top, color=color.fuchsia, offset=-1)
plotchar(debugMode and blockShort      ? 1 : na, title="‚ùå Blocked Short Combo", location=location.top, color=color.orange, offset=-1)

plotshape(debugMode and longSignal,  location=location.belowbar, color=color.lime, style=shape.triangleup,   title="üü¢ LongSignal ACTIVE")
plotshape(debugMode and shortSignal, location=location.abovebar, color=color.red,  style=shape.triangledown, title="üî¥ ShortSignal ACTIVE")

plot(debugMode ? longScore  : na, title="Long Score",  color=color.green)
plot(debugMode ? shortScore : na, title="Short Score", color=color.red)
plot(debugMode ? adx_m1     : na, title="ADX M1",      color=color.new(color.green, 70))
plot(debugMode ? adx_m5     : na, title="ADX M5",      color=color.new(color.orange, 70))
plot(debugMode ? adx_m15    : na, title="ADX M15",     color=color.new(color.red, 70))

plot(debugMode ? (validHTFLong ? 1 : na) : na, title="HTF Trend Up", color=color.teal, linewidth=2, style=plot.style_stepline)
plot(debugMode ? (validHTFShort ? 1 : na) : na, title="HTF Trend Down", color=color.maroon, linewidth=2, style=plot.style_stepline)
